{"version":3,"file":"server.js","names":["main","loadSchema","join","__dirname","loaders","GraphQLFileLoader","schema","schemaWithResolvers","addResolversToSchema","resolvers","pubsub","createPubSub","server","createServer","endpoint","port","maskedErrors","context","start","console","log"],"sources":["../src/server.js"],"sourcesContent":["import { createServer, createPubSub } from '@graphql-yoga/node';\r\nimport { resolvers } from './graphql/resolvers';\r\nimport { loadSchema } from '@graphql-tools/load';\r\nimport { GraphQLFileLoader } from '@graphql-tools/graphql-file-loader';\r\nimport { addResolversToSchema } from '@graphql-tools/schema';\r\nimport { join } from 'path';\r\n\r\nconst main = async () => {\r\n    const schema = await loadSchema(join(__dirname, \"/graphql/schema/schema.graphql\"), {\r\n        loaders: [new GraphQLFileLoader()]\r\n    })\r\n\r\n    const schemaWithResolvers = addResolversToSchema({ schema, resolvers })\r\n\r\n    const pubsub = createPubSub();\r\n\r\n    const server = createServer({\r\n        endpoint: \"/api\",\r\n        port: 9090,\r\n        schema: schemaWithResolvers,\r\n        maskedErrors: false,\r\n        context: {\r\n            pubsub\r\n        }\r\n    })\r\n    server.start()\r\n}\r\n\r\nmain().catch(console.log)\r\n\r\n\r\n"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;+CAJA,oJ;;;;;;AAMA,IAAMA,IAAI;EAAA,sEAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACY,IAAAC,gBAAA,EAAW,IAAAC,UAAA,EAAKC,SAAL,EAAgB,gCAAhB,CAAX,EAA8D;cAC/EC,OAAO,EAAE,CAAC,IAAIC,oCAAJ,EAAD;YADsE,CAA9D,CADZ;;UAAA;YACHC,MADG;YAKHC,mBALG,GAKmB,IAAAC,4BAAA,EAAqB;cAAEF,MAAM,EAANA,MAAF;cAAUG,SAAS,EAATA;YAAV,CAArB,CALnB;YAOHC,MAPG,GAOM,IAAAC,kBAAA,GAPN;YASHC,MATG,GASM,IAAAC,kBAAA,EAAa;cACxBC,QAAQ,EAAE,MADc;cAExBC,IAAI,EAAE,IAFkB;cAGxBT,MAAM,EAAEC,mBAHgB;cAIxBS,YAAY,EAAE,KAJU;cAKxBC,OAAO,EAAE;gBACLP,MAAM,EAANA;cADK;YALe,CAAb,CATN;YAkBTE,MAAM,CAACM,KAAP;;UAlBS;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAJlB,IAAI;IAAA;EAAA;AAAA,GAAV;;AAqBAA,IAAI,WAAJ,CAAamB,OAAO,CAACC,GAArB"}